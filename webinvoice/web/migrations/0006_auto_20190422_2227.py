# Generated by Django 2.1.5 on 2019-04-22 13:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import web.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('web', '0005_order_tax_rate'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_]*$', 'IDは英数字もしくはアンダースコア(_)のみとしてください')], verbose_name='会社ID')),
                ('corporate_number', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_]*$', 'IDは英数字もしくはアンダースコア(_)のみとしてください')], verbose_name='法人番号')),
                ('kana_name', models.CharField(max_length=50, verbose_name='契約者名カナ')),
                ('kanji_name', models.CharField(max_length=50, verbose_name='契約者名漢字')),
                ('zip', models.CharField(max_length=10, validators=[web.models.validate_postcode], verbose_name='契約者郵便番号')),
                ('address_pref', models.CharField(max_length=10, verbose_name='契約者都道府県')),
                ('address_city', models.CharField(max_length=30, verbose_name='契約者市区町村')),
                ('address_street', models.CharField(max_length=50, verbose_name='契約者住所番地以降')),
                ('address_bld', models.CharField(max_length=50, verbose_name='契約者住所建物名')),
                ('telephone_1', models.CharField(blank=True, max_length=20, null=True, validators=[web.models.validate_phonenumber], verbose_name='連絡先電話番号1')),
                ('telephone_2', models.CharField(blank=True, max_length=20, null=True, validators=[web.models.validate_phonenumber], verbose_name='連絡先電話番号2')),
                ('fax', models.CharField(blank=True, max_length=20, null=True, validators=[web.models.validate_phonenumber], verbose_name='FAX番号')),
                ('hp_url', models.CharField(blank=True, max_length=20, null=True, verbose_name='URL')),
                ('owner_name', models.CharField(max_length=50, verbose_name='代表者名')),
                ('representative_name', models.CharField(max_length=50, verbose_name='担当者名')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='メール')),
                ('note', models.TextField(blank=True, null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('registered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_registered', to=settings.AUTH_USER_MODEL, verbose_name='登録者')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_updated', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '会社',
                'verbose_name_plural': '会社',
            },
        ),
        migrations.CreateModel(
            name='InvoiceEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_zip', models.CharField(max_length=10, validators=[web.models.validate_postcode], verbose_name='請求郵便番号')),
                ('invoice_address_pref', models.CharField(max_length=10, verbose_name='請求都道府県')),
                ('invoice_address_city', models.CharField(max_length=30, verbose_name='請求市区町村')),
                ('invoice_address_street', models.CharField(max_length=50, verbose_name='請求住所番地以降\x08')),
                ('invoice_address_bld', models.CharField(max_length=50, verbose_name='請求住所建物名')),
                ('invoice_company_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='請求会社名')),
                ('inovoice_dept', models.CharField(blank=True, max_length=100, null=True, verbose_name='請求部署')),
                ('invoice_person', models.CharField(blank=True, max_length=50, null=True, verbose_name='請求宛名')),
                ('invoice_project_1', models.CharField(blank=True, max_length=50, null=True, verbose_name='請求宛名1')),
                ('invoice_project_2', models.CharField(blank=True, max_length=50, null=True, verbose_name='請求宛名2')),
                ('invoice_project_3', models.CharField(blank=True, max_length=50, null=True, verbose_name='請求宛名3')),
                ('payment_method', models.CharField(choices=[('クレカ', 'クレカ'), ('引落', '引落'), ('振込', '振込')], default='振込', max_length=20, verbose_name='支払い方法')),
                ('invoice_closed_at', models.CharField(choices=[('末日', '末日'), ('20日', '20日')], max_length=20, verbose_name='締め日')),
                ('payment_due_to', models.CharField(choices=[('末日', '末日'), ('20日', '20日')], max_length=20, verbose_name='支払い期日')),
                ('invoice_sent_at', models.CharField(choices=[('末日', '末日'), ('20日', '20日')], max_length=20, verbose_name='支払い期日')),
                ('invoice_timing', models.CharField(choices=[('売掛', '売掛'), ('前入金', '前入金')], max_length=20, verbose_name='請求タイミング')),
                ('invoice_period', models.CharField(choices=[('毎月', '毎月'), ('6ヶ月', '6ヶ月')], max_length=20, verbose_name='請求周期')),
                ('bank_name', models.CharField(max_length=20, verbose_name='振込銀行名')),
                ('bank_branch_name', models.CharField(max_length=20, verbose_name='振込視点名')),
                ('bank_account_type', models.CharField(max_length=20, verbose_name='口座種類')),
                ('bank_account_number', models.CharField(max_length=20, verbose_name='口座番号')),
                ('credit_card_settlement_company', models.CharField(max_length=20, verbose_name='クレカ決済会社')),
                ('credit_card_code', models.CharField(max_length=20, verbose_name='クレカコード')),
                ('credit_card_id', models.CharField(max_length=20, verbose_name='クレカID')),
                ('settlement_company', models.CharField(max_length=20, verbose_name='決済会社')),
                ('settlement_code', models.CharField(max_length=20, verbose_name='決済コード')),
                ('settlement_id', models.CharField(max_length=20, verbose_name='決済ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Company', verbose_name='会社')),
                ('registered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entity_registered', to=settings.AUTH_USER_MODEL, verbose_name='登録者')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entity_updated', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '請求管理簿',
                'verbose_name_plural': '請求管理簿',
            },
        ),
        migrations.RemoveField(
            model_name='invoice',
            name='customer',
        ),
        migrations.RemoveField(
            model_name='order',
            name='customer',
        ),
        migrations.RemoveField(
            model_name='order',
            name='invoice',
        ),
        migrations.RemoveField(
            model_name='order',
            name='product',
        ),
        migrations.RemoveField(
            model_name='order',
            name='tax_rate',
        ),
        migrations.DeleteModel(
            name='Customer',
        ),
        migrations.DeleteModel(
            name='Invoice',
        ),
        migrations.DeleteModel(
            name='Order',
        ),
        migrations.DeleteModel(
            name='Product',
        ),
        migrations.DeleteModel(
            name='TaxRate',
        ),
    ]
